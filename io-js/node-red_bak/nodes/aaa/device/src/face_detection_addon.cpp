/* ----------------------------------------------------------------------------
 * This file was automatically generated by io-js-autogen Version 0.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify the
 * C header file instead.
 * ----------------------------------------------------------------------------- */
#include "face_detection_addon.h"
#include "stdlib.h"
#include "string.h"
#include "_globalvar.h"

using namespace v8;


// 10: extern int face_detection ( face_detection_cb_t cb , int interval ) ;
Handle<Value> face_detectionV8(const Arguments &args) {
    HandleScope scope;
    
    // Convert V8 parameters to C++
    
    V8_ASSERT(args[0]->IsFunction(), "args[0] parameters error!");
    cbArray[0] = Persistent<Function>::New(Local<Function>::Cast(args[0]));
    face_detection_cb_t arg0;;
    arg0 = cbFunc0;
    
    
    V8_ASSERT(args[1]->IsInt32(), "args[1] parameters error!");
    int arg1 = (int)args[1]->IntegerValue();
    
        
    // Call C++ function
    int ret = (int)face_detection(arg0, arg1);
    
    
    
    // Convert C++ return value to V8
    Handle<Value> retV8 = Int32::New(ret);
    
    return scope.Close(retV8);
    
}
// 11: extern void face_detection_run ( ) ;
Handle<Value> face_detection_runV8(const Arguments &args) {
    HandleScope scope;
        
    // Call C++ function
    face_detection_run();
    
    
    return scope.Close(Undefined());
    
}
static void SetMemberFunc(Handle<Object> obj) {
    obj->Set(v8::String::NewSymbol("face_detection"),
           FunctionTemplate::New(face_detectionV8)->GetFunction());

    obj->Set(v8::String::NewSymbol("face_detection_run"),
           FunctionTemplate::New(face_detection_runV8)->GetFunction());
}


// Const defined by macros
static void SetConst(Handle<Object> obj) {

}

// Const defined by enumeration
static void SetEnumConst(Handle<Object> obj) {

}
static void SetGlobalVarFunc(Handle<Object> obj) {
}

void Initface_detection(Handle<Object> exports) {

    SetMemberFunc(exports);

    SetConst(exports);

    SetEnumConst(exports);

    SetGlobalVarFunc(exports);
}
