/* ----------------------------------------------------------------------------
 * This file was automatically generated by io-js-autogen Version 0.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify the
 * C header file instead.
 * ----------------------------------------------------------------------------- */
#include "_globalvar.h"
#include <map>
#include "stdlib.h"

Persistent<Function> cbArray[1];

std::map <void *, Persistent<Object> > CClassToJsObjMap;
std::map <void *, Persistent<Object> >::iterator iter;
Persistent<Object> JSObj;


void cbFunc0(int arg0, char * arg1) {
    HandleScope scope;
    const unsigned argc = 2;
    Local<Value> argv[argc];

    argv[0] = Int32::New(arg0);
        argv[1] = v8::String::New((char*)arg1);
    
    cbArray[0]->Call(Context::GetCurrent()->Global(), argc, argv);
    
    
    int idx1;
    int len1;
    if (argv[1]->IsString()) {
        v8::String::AsciiValue argv1_at(argv[1]->ToString());
        
        strcpy(arg1, *argv1_at);
    } else {
        Local<Array> argv1_at = Local<Array>::Cast(argv[1]);
        len1 = argv1_at->Length() + 1;
        
        for (idx1 = 0; idx1 < len1 - 1; idx1++) {
            Local<Value> argv1_a = argv1_at->Get(idx1);
            V8_ASSERT(!argv1_a->IsNull() && argv1_a->IsInt32(), "arg1[%d] parameter error", idx1);
            arg1[idx1] = (char)argv1_a->IntegerValue();
        }
        arg1[idx1] = 0;
    }
    

    return;
}
